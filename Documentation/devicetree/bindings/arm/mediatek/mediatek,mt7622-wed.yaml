# SPDX-License-Identifier: (GPL-2.0 OR BSD-2-Clause)
%YAML 1.2
---
$id: "http://devicetree.org/schemas/arm/mediatek/mediatek,mt7622-wed.yaml#"
$schema: "http://devicetree.org/meta-schemas/core.yaml#"

title: MediaTek Wireless Ethernet Dispatch Controller for MT7622

maintainers:
  - Lorenzo Bianconi <lorenzo@kernel.org>
  - Felix Fietkau <nbd@nbd.name>

description:
  The mediatek wireless ethernet dispatch controller can be configured to
  intercept and handle access to the WLAN DMA queues and PCIe interrupts
  and implement hardware flow offloading from ethernet to WLAN.

properties:
  compatible:
    items:
      - enum:
          - mediatek,mt7622-wed
          - mediatek,mt7986-wed
      - const: syscon

  reg:
    maxItems: 1

  interrupts:
    maxItems: 1

  memory-region:
    minItems: 3
    maxItems: 3
    description:
      phandles to nodes describing reserved memory used by mt7986-wed firmware
      (see bindings/reserved-memory/reserved-memory.txt)

  mediatek,wo-ccif:
    $ref: /schemas/types.yaml#/definitions/phandle
    description:
      Phandle to the mediatek wed-wo controller.

  mediatek,wo-boot:
    $ref: /schemas/types.yaml#/definitions/phandle
    description:
      Phandle to the mediatek wed-wo boot interface.

  mediatek,wo-dlm:
    $ref: /schemas/types.yaml#/definitions/phandle
    description:
      Phandle to the mediatek wed-wo rx hw ring.

allOf:
  - if:
      properties:
        compatible:
          contains:
            const: mediatek,mt7986-wed
    then:
      properties:
        mediatek,wo-boot: true
        mediatek,wo-ccif: true
        mediatek,wo-dlm: true
        memory-region: true

required:
  - compatible
  - reg
  - interrupts

additionalProperties: false

examples:
  - |
    #include <dt-bindings/interrupt-controller/arm-gic.h>
    #include <dt-bindings/interrupt-controller/irq.h>
    soc {
      #address-cells = <2>;
      #size-cells = <2>;
      wed0: wed@1020a000 {
        compatible = "mediatek,mt7622-wed","syscon";
        reg = <0 0x1020a000 0 0x1000>;
        interrupts = <GIC_SPI 214 IRQ_TYPE_LEVEL_LOW>;
      };
    };

  - |
    #include <dt-bindings/interrupt-controller/arm-gic.h>
    #include <dt-bindings/interrupt-controller/irq.h>
    soc {
      #address-cells = <2>;
      #size-cells = <2>;
      reserved-memory {
        #address-cells = <2>;
        #size-cells = <2>;

        wo_emi: wo-emi@4fd00000 {
          reg = <0 0x4fd00000 0 0x40000>;
          no-map;
        };

        wo_data: wo-data@4fd80000 {
          reg = <0 0x4fd80000 0 0x240000>;
          no-map;
        };

        wo_ilm: wo-ilm@151e0000 {
          reg = <0 0x151e0000 0 0x8000>;
          no-map;
        };
      };

      wo_boot: wo-boot@15194000 {
        compatible = "mediatek,mt7986-wo-boot","syscon";
        reg = <0 0x15194000 0 0x1000>;
      };

      wo_ccif0: wo-ccif@151a5000 {
        compatible = "mediatek,mt7986-wo-ccif","syscon";
        reg = <0 0x151a5000 0 0x1000>;
        interrupts = <GIC_SPI 211 IRQ_TYPE_LEVEL_HIGH>;
      };

      wo_dlm0: wo-dlm@151e8000 {
        compatible = "mediatek,mt7986-wo-dlm";
        reg = <0 0x151e8000 0 0x2000>;
        resets = <&ethsysrst 0>;
        reset-names = "wocpu_rst";
      };

      wed1: wed@1020a000 {
        compatible = "mediatek,mt7986-wed","syscon";
        reg = <0 0x15010000 0 0x1000>;
        interrupts = <GIC_SPI 205 IRQ_TYPE_LEVEL_HIGH>;

        memory-region = <&wo_emi>, <&wo_data>, <&wo_ilm>;
        mediatek,wo-ccif = <&wo_ccif0>;
        mediatek,wo-boot = <&wo_boot>;
        mediatek,wo-dlm = <&wo_dlm0>;
      };
    };
